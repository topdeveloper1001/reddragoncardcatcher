<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:rdcc="http://www.reddragoncardcatcher.com/winfx/2019/xaml/presentation">

    <Style
        x:Key="ButtonTextBlockStyle"
        TargetType="{x:Type TextBlock}">
        <Setter
            Property="Foreground"
            Value="{StaticResource ButtonTextBlockBrush}" />
        <Setter
            Property="FontFamily"
            Value="{StaticResource OpenSansSemi}" />
        <Setter
            Property="FontSize"
            Value="13" />
        <Setter
            Property="FontWeight"
            Value="SemiBold" />
        <Setter
            Property="Effect">
            <Setter.Value>
                <DropShadowEffect
                    Direction="270"
                    BlurRadius="0"
                    ShadowDepth="1"
                    Color="{StaticResource ButtonTextBlockShadowColor}" />
            </Setter.Value>
        </Setter>
    </Style>

    <Style
        x:Key="LaunchButtonStyle"
        TargetType="{x:Type ToggleButton}">
        <Setter
            Property="BorderBrush"
            Value="#2b2b33" />
        <Setter
            Property="BorderThickness"
            Value="1" />
        <Setter
            Property="Height"
            Value="107" />
        <Setter
            Property="Width"
            Value="117" />
        <Setter
            Property="Cursor"
            Value="Hand" />
        <Setter
            Property="Template">
            <Setter.Value>
                <ControlTemplate
                    TargetType="{x:Type ToggleButton}">
                    <Border
                        x:Name="MainBorder"
                        Height="106"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        CornerRadius="2">
                        <Border.Effect>
                            <DropShadowEffect
                                BlurRadius="0"
                                Color="{StaticResource ButtonDropShadowColor}"
                                ShadowDepth="1"
                                Direction="270" />
                        </Border.Effect>

                        <TextBlock
                            TextAlignment="Center"
                            VerticalAlignment="Center"
                            HorizontalAlignment="Center"
                            Width="70"
                            TextWrapping="Wrap"
                            Style="{StaticResource ButtonTextBlockStyle}"
                            Text="{TemplateBinding Content}" />

                    </Border>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <!-- Normal -->
                            <MultiTrigger.Conditions>
                                <Condition
                                    Property="IsChecked"
                                    Value="False" />
                                <Condition
                                    Property="IsPressed"
                                    Value="False" />
                                <Condition
                                    Property="IsMouseOver"
                                    Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter
                                TargetName="MainBorder"
                                Property="Background"
                                Value="{StaticResource StartButtonBrush}" />
                        </MultiTrigger>
                        <!-- Normal + Mouseover-->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition
                                    Property="IsChecked"
                                    Value="False" />
                                <Condition
                                    Property="IsPressed"
                                    Value="False" />
                                <Condition
                                    Property="IsMouseOver"
                                    Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter
                                TargetName="MainBorder"
                                Property="Background"
                                Value="{StaticResource StartButtonMouseOverBrush}" />
                        </MultiTrigger>
                        <!-- Normal + Mouseover + Pressed-->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition
                                    Property="IsChecked"
                                    Value="False" />
                                <Condition
                                    Property="IsPressed"
                                    Value="True" />
                                <Condition
                                    Property="IsMouseOver"
                                    Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter
                                TargetName="MainBorder"
                                Property="Background"
                                Value="{StaticResource StartButtonPressedMouseOverBrush}" />
                        </MultiTrigger>
                        <!-- Checked -->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition
                                    Property="IsChecked"
                                    Value="True" />
                                <Condition
                                    Property="IsPressed"
                                    Value="False" />
                                <Condition
                                    Property="IsMouseOver"
                                    Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter
                                TargetName="MainBorder"
                                Property="Background"
                                Value="{StaticResource StopButtonBrush}" />
                        </MultiTrigger>
                        <!-- Checked + Mouseover -->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition
                                    Property="IsChecked"
                                    Value="True" />
                                <Condition
                                    Property="IsPressed"
                                    Value="False" />
                                <Condition
                                    Property="IsMouseOver"
                                    Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter
                                TargetName="MainBorder"
                                Property="Background"
                                Value="{StaticResource StopButtonMouseOverBrush}" />
                        </MultiTrigger>
                        <!-- Checked + Mouseover + Pressed -->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition
                                    Property="IsChecked"
                                    Value="True" />
                                <Condition
                                    Property="IsPressed"
                                    Value="True" />
                                <Condition
                                    Property="IsMouseOver"
                                    Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter
                                TargetName="MainBorder"
                                Property="Background"
                                Value="{StaticResource StopButtonPressedMouseOverBrush}" />
                        </MultiTrigger>
                        <Trigger
                            Property="IsEnabled"
                            Value="False">
                            <Setter
                                Property="Background"
                                TargetName="MainBorder"
                                Value="{StaticResource NormalButtonDisabledBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <DataTrigger
                Binding="{Binding IsRunning}"
                Value="True">
                <Setter
                    Property="Content"
                    Value="{ResX Key=Common_StopCatcher}" />
            </DataTrigger>
            <DataTrigger
                Binding="{Binding IsRunning}"
                Value="False">
                <Setter
                    Property="Content"
                    Value="{ResX Key=Common_StartCatcher}" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style
        x:Key="NormalButtonStyle"
        TargetType="{x:Type Button}">
        <Setter
            Property="Height"
            Value="31" />
        <Setter
            Property="Width"
            Value="134" />
        <Setter
            Property="Cursor"
            Value="Hand" />
        <Setter
            Property="Template">
            <Setter.Value>
                <ControlTemplate
                    TargetType="{x:Type Button}">
                    <Border
                        x:Name="MainBorder"
                        CornerRadius="2"
                        Height="30"
                        BorderThickness="1"
                        BorderBrush="#0e552d">
                        <Border.Effect>
                            <DropShadowEffect
                                BlurRadius="0"
                                Color="{StaticResource ButtonDropShadowColor}"
                                ShadowDepth="1"
                                Direction="270" />
                        </Border.Effect>
                        <TextBlock
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            Style="{StaticResource ButtonTextBlockStyle}"
                            Text="{TemplateBinding Content}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger
                            Property="IsMouseOver"
                            Value="False">
                            <Setter
                                Property="Background"
                                TargetName="MainBorder"
                                Value="{StaticResource NormalButtonBrush}" />
                        </Trigger>
                        <Trigger
                            Property="IsMouseOver"
                            Value="True">
                            <Setter
                                Property="Background"
                                TargetName="MainBorder"
                                Value="{StaticResource NormalButtonMouseOverBrush}" />
                        </Trigger>
                        <Trigger
                            Property="IsEnabled"
                            Value="False">
                            <Setter
                                Property="Background"
                                TargetName="MainBorder"
                                Value="{StaticResource NormalButtonDisabledBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style
        x:Key="TextBlockStyle"
        TargetType="{x:Type TextBlock}">
        <Setter
            Property="Foreground"
            Value="{StaticResource TextForegroundBrush}" />
    </Style>

    <Style
        x:Key="TextBoxStyle"
        TargetType="{x:Type TextBox}">
        <Setter
            Property="Foreground"
            Value="{StaticResource TextForegroundBrush}" />
        <Setter
            Property="Background"
            Value="{StaticResource TextBoxBackgroundBrush}" />
    </Style>

    <Style
        TargetType="{x:Type rdcc:ProgressBarEx}">
        <Setter
            Property="Foreground"
            Value="{StaticResource TextForegroundBrush}" />
        <Setter
            Property="Background"
            Value="{StaticResource ProgressBarBackgroundBrush}" />
        <Setter
            Property="BorderBrush"
            Value="{StaticResource ProgressBarBorderBrush}" />
        <Setter
            Property="BorderThickness"
            Value="1" />
        <Setter
            Property="FontSize"
            Value="12" />
        <Setter
            Property="Template">
            <Setter.Value>
                <ControlTemplate
                    TargetType="{x:Type rdcc:ProgressBarEx}">
                    <Grid
                        x:Name="TemplateRoot">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition
                                Width="Auto" />
                            <ColumnDefinition
                                Width="*" />
                        </Grid.ColumnDefinitions>

                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup
                                x:Name="CommonStates">
                                <VisualState
                                    x:Name="Determinate" />
                                <VisualState
                                    x:Name="Indeterminate">
                                    <Storyboard
                                        RepeatBehavior="Forever">
                                        <DoubleAnimationUsingKeyFrames
                                            Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)"
                                            Storyboard.TargetName="Animation">
                                            <EasingDoubleKeyFrame
                                                KeyTime="0"
                                                Value="0.25" />
                                            <EasingDoubleKeyFrame
                                                KeyTime="0:0:1"
                                                Value="0.25" />
                                            <EasingDoubleKeyFrame
                                                KeyTime="0:0:2"
                                                Value="0.25" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <PointAnimationUsingKeyFrames
                                            Storyboard.TargetProperty="(UIElement.RenderTransformOrigin)"
                                            Storyboard.TargetName="Animation">
                                            <EasingPointKeyFrame
                                                KeyTime="0"
                                                Value="-0.5,0.5" />
                                            <EasingPointKeyFrame
                                                KeyTime="0:0:1"
                                                Value="0.5,0.5" />
                                            <EasingPointKeyFrame
                                                KeyTime="0:0:2"
                                                Value="1.5,0.5" />
                                        </PointAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>

                        <Border
                            Grid.Column="1"
                            Height="{TemplateBinding Height}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding BorderBrush}" />

                        <Rectangle
                            x:Name="PART_Track"
                            Grid.Column="1" />

                        <Grid
                            x:Name="PART_Indicator"
                            Grid.Column="1"
                            Height="{TemplateBinding Height}"
                            Margin="1"
                            ClipToBounds="True"
                            HorizontalAlignment="Left">

                            <Rectangle
                                x:Name="Indicator"
                                Fill="{TemplateBinding Background}" />
                            <Rectangle
                                x:Name="Animation"
                                Fill="{TemplateBinding Background}"
                                RenderTransformOrigin="0.5,0.5">
                                <Rectangle.RenderTransform>
                                    <TransformGroup>
                                        <ScaleTransform />
                                        <SkewTransform />
                                        <RotateTransform />
                                        <TranslateTransform />
                                    </TransformGroup>
                                </Rectangle.RenderTransform>
                            </Rectangle>
                        </Grid>

                        <TextBlock
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            FontSize="{TemplateBinding FontSize}"
                            Margin="5,0,10,0"
                            Visibility="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=Text, Converter={rdcc:NullToVisibilityConverter}}"
                            Text="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=Text}" />

                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger
                            Property="Orientation"
                            Value="Vertical">
                            <Setter
                                Property="LayoutTransform"
                                TargetName="TemplateRoot">
                                <Setter.Value>
                                    <RotateTransform
                                        Angle="-90" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger
                            Property="IsIndeterminate"
                            Value="True">
                            <Setter
                                Property="Visibility"
                                TargetName="Indicator"
                                Value="Collapsed" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style
        x:Key="UpgradeButtonStyle"
        TargetType="{x:Type Button}">
        <Setter
            Property="Cursor"
            Value="Hand" />
        <Setter
            Property="Template">
            <Setter.Value>
                <ControlTemplate
                    TargetType="{x:Type Button}">
                    <Border
                        BorderThickness="0"
                        Background="Transparent">
                        <ContentPresenter />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger
                            Property="IsMouseOver"
                            Value="True">
                            <Setter
                                Property="Foreground"
                                Value="#475162" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style
        x:Key="{x:Type ToolTip}"
        TargetType="{x:Type ToolTip}">
        <Style.Resources>
            <Style
                TargetType="ContentPresenter">
                <Style.Resources>
                    <Style
                        TargetType="TextBlock">
                        <Setter
                            Property="TextWrapping"
                            Value="Wrap" />
                    </Style>
                </Style.Resources>
            </Style>
        </Style.Resources>
        <Setter
            Property="Foreground"
            Value="{StaticResource TextForegroundBrush}" />
        <Setter
            Property="Background"
            Value="{StaticResource WindowContentBackgroundBrush}" />
        <Setter
            Property="MaxWidth"
            Value="450" />
    </Style>

    <Style
        x:Key="NotificationWindowStyle"
        BasedOn="{StaticResource WindowBaseStyle}"
        TargetType="{x:Type rdcc:RDCCWindow}">
        <Setter
            Property="SizeToContent"
            Value="WidthAndHeight" />
        <Setter
            Property="CanResize"
            Value="False" />
        <Setter
            Property="CanMaximize"
            Value="False" />
        <Setter
            Property="CanMinimize"
            Value="False" />
        <Setter
            Property="CanClose"
            Value="False" />
        <Setter
            Property="MaxWidth"
            Value="550" />
        <Setter
            Property="MinWidth"
            Value="300" />
        <Setter
            Property="ShowInTaskbar"
            Value="False" />
        <Setter
            Property="TextOptions.TextFormattingMode"
            Value="Display" />
    </Style>

    <Style
        TargetType="{x:Type CheckBox}">
        <Setter
            Property="Background"
            Value="{StaticResource TextBoxBackgroundBrush}" />
    </Style>

    <Style
        TargetType="{x:Type RadioButton}">
        <Setter
            Property="Background"
            Value="{StaticResource TextBoxBackgroundBrush}" />
    </Style>

</ResourceDictionary>